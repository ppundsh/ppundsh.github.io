<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[學習單]]></title>
    <url>%2F2018-04-14%2F%E5%AD%B8%E7%BF%92%E5%96%AE%2F</url>
    <content type="text"><![CDATA[以後學習用的記錄TraceGrafanaRancherSpunkELKDockerProbe系統SIEMDLP1.作業系統基礎CentOS7 mionimal修改 hostname，查看hostname ，分暫時與永久ip 修改為固定 ip/dhcp ，查看 gateway, 暫時DNS停用防火牆，查看開機是否執行查看系統時間/怎麼看對時，如何強制對時，手動修改時間查看 SELINUX 狀態，暫時/永久停用查看現在的 DNS 為何，暫時/水久停用安裝 telnet，nslookup、man、wget2.Log查看系統訊息log查看目前登入人員，查看目前登入人員正在下什麼指令，查看曾經登入使用者查看硬體 log查看 crontab log查看曾經輸入過的指令查看誰成功登入，誰失敗登入cat 最後十筆記錄，最前十筆紀錄，一修改就跳 log資料夾欄位的意思 root,root 意思]]></content>
      <tags>
        <tag>Personal</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Cmder 筆記]]></title>
    <url>%2F2018-04-13%2FCmder-%E7%AD%86%E8%A8%98%2F</url>
    <content type="text"><![CDATA[設定上的記錄，全新安裝後要做的設定安裝右鍵選單1Cmder.exe /REGISTER ALL開啟時自動到指定的位置：12setting →Startup:Tasks→+cmd /k "%ConEmuDir%\..\init.bat" -new_console:d:D:\GitHub\Hexo\安裝後的調整：中文字體：1Font ，Mani font 下的 Aternative font 加入 CJK 字體，再設置 Unicode ranges 為 CJK中文亂碼:順便把代碼頁換成 utf-8Startup→Environnment 下，加入12set LANG=zh_CN.UTF-8chcp 65001無邊框1main&gt;&gt; appearence &gt;&gt; hide caption always避免殘留字默認的為λ，改成常用的$打開\cmder\vendor目錄下面的clink.lua文件，搜索λ，全部替換成$即可！]]></content>
      <tags>
        <tag>cmd</tag>
        <tag>MIS</tag>
        <tag>install</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Windows 改本機密碼]]></title>
    <url>%2F2018-04-13%2FWindows%E6%94%B9%E6%9C%AC%E6%A9%9F%E5%AF%86%E7%A2%BC%2F</url>
    <content type="text"><![CDATA[剛好遇到，小記一下。用開機光碟修改，以便在鎖定畫面叫出 cmd 改密碼。用開機光碟，不要按下一步，用指令叫出 cmd1shift + F10用 diskpart 查看分區1diskpaart將螢幕小鍵盤改成 cmd123456cd windows\system32copy cmd.exe cmd.exe.oricopy osk.exe osk.exe.oridel osk.exeren cmd.exe osk.exeshutdown –r –t 00或12copy C:\windows\system32\sethc.exe c:\copy /y c:\windows\system32\cmd.exe c:\windows\system32\sethc.exe(登入界面按五次 shift )重開機後，點右下角的“輕鬆讀取”，點螢幕小鍵盤，用 net user 改密碼的指令1net user 帳號 *完成後按 exit 離開。之後預定：123456&lt;html&gt;&lt;H3&gt;中間人&lt;/H3&gt;&lt;form&gt;&lt;input type="file" name="datafile" size="40"&gt;&lt;/form&gt;&lt;/html&gt;]]></content>
      <tags>
        <tag>cmd</tag>
        <tag>windows</tag>
        <tag>crack</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[維運指令備忘]]></title>
    <url>%2F2018-04-11%2F%E7%B6%AD%E9%81%8B%E6%8C%87%E4%BB%A4%E5%82%99%E5%BF%98%2F</url>
    <content type="text"><![CDATA[先記錄 CMD 、能直接執行的命令、控制台快捷鍵CMDCmd 用檔案總管開啟當前資料夾1start .檔案總管用 Cmd 開啟當前資料夾12shift + 右鍵位置列輸入 cmdRun開啟指令為1win + r創建新捷徑1rundll32.exe shell32.dll,Control_RunDLL ncpa.cpl常用參數有：命令功能calc小算盤ncpa.cpl控制台：網路連線sysdm.cpl系統appwize.cpl新增程式gpedit.msc群組mstsc遠端桌面services.msc服務control userpasswords2自動登入netplwiz自動登入lusrmgr.msc本機使用者和群組certmgr.msc憑證管理perfmon.msc效能監視器winver查看 windows 版本命令列工具工具功能systeminfo系統祥細訊息net use查看網路連線net user查看本機帳號whoami查看當前帳號狀態]]></content>
      <tags>
        <tag>cmd</tag>
        <tag>MIS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo + GitHub 搭建記錄]]></title>
    <url>%2F2018-04-09%2FHexo-GitHub-%E6%90%AD%E5%BB%BA%E8%A8%98%E9%8C%84%2F</url>
    <content type="text"><![CDATA[作為第一篇記錄，圖片等之後確認圖床再補上。官網 https://hexo.io/安裝 Git 和 Node.js主要參者作者：lyyybz、Xuanwo必需先裝好 Git 和 Node.js 。安裝和設定 GitGit 是一款免費、開源的分佈式版本控制系統。Git 的安裝詳細可參考 在 Windows 平台必裝的三套 Git 工具 一文，在此簡述必要的動作。12到 https://gitforwindows.org/ 官網，點擊 Download 下載，預設安裝即可開啟 CMD ，輸入 git --version 確認安裝版本。設定使用者名稱及電子郵件。 Git 的提交會使用這些資訊，而且提交後不能再被修改。詳細可參考 開始-初次設定-Git12$ git config --global user.name "名稱"$ git config --global user.email Email地址可用 git config --global --list 確認是否設定正確安裝 Node.jsNode.js 是一款開源且跨平台的伺服器端和網路應用，使用 JavaScript 開發。到官網下載 https://nodejs.org/en/ ，默認安裝即可。完成後可以在 cmd 輸入以下指令確認12node -vnpm -v配置 Github至 https://github.com/ 申請一個帳號。登陸之後，點擊頁面右上角的加號，選擇New repository (建立儲存庫)在Repository name下填寫yourname.github.io，Description (optional)下填寫一些簡單的描述（不寫也沒有關係）開啟 gh-pages 功能點擊界面右側的Settings，你將會打開這個庫的 setting 頁面，向下拖動，直到看見GitHub Pages點擊Automatic page generator，Github 將會創建出一個 gh-pages 的頁面。 如果配置沒有問題，那麼大約 15 分鐘之後，yourname.github.io這個網址就可以正常訪問了~ 如果yourname.github.io已經可以正常訪問了，那麼 Github 一側的配置已經全部結束了。配置 Hexo先決定好要放置 blog 文件的資料夾，假設是 D://Github/blug，建立好後該資料後在位置列輸入 cmd ，用當前目錄開啟 CMD於 CMD 中輸入123npm install hexo-cli-gnpm install hexo --savenpm install hexo-deployer-git --save輸入以下指令確認1hexo -v初始化 Hexo繼續輸入12hexo initnpm install部建1hexo g本機測試1hexo s打在 http://localhost:4000/ ，可以看到當前的網頁使用 Hexo可以在 _config.yml 中修改大部份的配置。配置 Deployment用文字編輯器修改 D://Github/blog (範例用)下的 _config.yml ，找到 Deployment ，按照如下deploy:type: gitrepo: git@github.com:yourname/yourname.github.io.gitbranch: master在 blog 輸入1hexo d開始佈署添加新文章打開 Hexo 目錄下的source文件夾，所有的文章都會以 md 形式保存在_post文件夾中，只要在_post文件夾中新建 md 類型的文檔，就能在執行hexo g的時候被渲染。 新建的文章頭需要添加一些 yml 資訊，如下所示：title: hello-world //在此處添加你的標題。 date: 2014-11-7 08:55:29 //在此處輸入你編輯這篇文章的時間。 categories: Exercise //在此處輸入這篇文章的分類。 Markdown 記錄編輯格式是用 markdown ，留一下參考連結http://markdown.tw/https://hyxxsfwy.github.io/2016/01/15/Hexo-Markdown-%E7%AE%80%E6%98%8E%E8%AF%AD%E6%B3%95%E6%89%8B%E5%86%8C/HTML 錨點跳轉來源：Charlotte.HonG1&lt;span id="First"&gt;跳轉到的地方&lt;/span&gt;相對應的跳轉方式就是1[點我跳轉](#First)增加注解功能安裝 hexo-footnotesnpm install hexo-footnotes --save 安裝完成即自動啟用，如果沒啟用，可以修改添加以下資料：1234````bashplugins: - hexo-footnotes`使用方法為121 ### 部署時保證 README.md 不被渲染 來源：[Godlike](http://godlikemeteor.com/2017/07/20/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%94%BB%E7%95%A5%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E8%BF%9B%E9%98%B6%E7%AF%87/) 一般 Git 倉庫下面都有一個README.md來表現這個倉庫設立的目的，但是運用 hexo 佈置的時候會被自動渲染，接下來要介紹部署時保證README.md不被渲染的方法。 在 Hexo 目錄下的source根目錄下添加一個,README.md。修改 Hexo 目錄下的_config.yml。將skip_render參數的值設置上。skip_render: README.md保存退出即可。 ## 修改主題為 Next 作者：[zhiho](https://zhiho.github.io/2015/09/29/hexo-next/) 在 blog 資料夾下使用命令下載 Next 主題到 themes 目錄中 1git clone https://github.com/iissnan/hexo-theme-next themes/next 修改站點配置文件_config.yml 中的 theme 標籤： 1theme: next 修改成功後，重新啟動 Server 就能夠看到修改後的效果。Next 主題一共有三種樣式，可以通過修改 Next 主題的配置文件_config.yml 來修改： # --------------------------------------------------------------- # Scheme Settings # --------------------------------------------------------------- # Schemes scheme: Muse #scheme: Mist #scheme: Pisces Gitalk 評論系統作者：asdfv1020一個基於 Github Issue 和 Preact 開發的評論插件，所有要修改的檔案都是在 D:\GitHub\blog\themes\next (範例目錄的\themes\next) 之下詳情 Demo 可見：https://gitalk.github.io/ 註冊新應用在 GitHub 上註冊新應用，鏈結：https://github.com/settings/applications/new 參數說明： Application name： # 應用名稱，隨意 Homepage URL： # 網站 URL，如 https://ppundsh.github.io ，不是 repo Application description # 描述，隨意 Authorization callback URL：# 網站 URL，https://ppundsh.github.io ，不是 repo 點擊註冊後，頁面跳轉，其中Client ID和Client Secret在後面的配置中需要用到，到時複製粘貼即可 comments.swig修改/layout/_partials/comments.swig，添加內容在最下面： 123&#123;% if theme.gitalk.enable %&#125; &lt;div id="gitalk-container"&gt;&lt;/div&gt;&#123;% endif %&#125; index.swig修改layout/_third-party/comments/index.swig，在最後一行添加內容： 1&#123;% include 'gitalk.swig' %&#125; gitalk.styl新建/source/css/_common/components/third-party/gitalk.styl文件，添加內容： 1234.gt-header a, .gt-comments a, .gt-popup a border-bottom: none;.gt-container .gt-popup .gt-action.is--active:before top: 0.7em; third-party.styl修改/source/css/_common/components/third-party/third-party.styl，在最後一行上添加內容，引入樣式： 1@import "gitalk"; Md5 加密 id 避免中文編碼過長參考資料與作者：qhh0205、uolcanopost 檔名為中文時，容易造成編碼出 github issue lables 50 字符限制而出現 Error: Validation Failed. ，解決方法為使用 md5 加密 id 來縮短長度。 在此把 md5 加密的 js 放在 gist 上托管，在主頁面上右上角的頭像，點一下選 your gistGist description ：說明，選填Filename including extension ：md5.min.js內容請貼上以下 js 源碼點開後的內容：點我 完成後點右下的 Create public gist 以創建。 創建成功後，點擊右邊的 RAW ，將網址的 gist.githubusercontent.com 替換為 rawgit.com ，即 https://rawgit.com/ppundsh/f359785730acb0fbfdee07eb12522623/raw/15ce7e5ea97e7afb71792d58a21978f225195a12/md5.min.js 以上即為 md5 js gist 嵌入鏈結 gitalk.swig新建/layout/_third-party/comments/gitalk.swig文件，並添加內容：第二行 &lt;scrip scrc= 替換為自已的 md5 js gist 嵌入鏈結 1234567891011121314151617&#123;% if page.comments &amp;&amp; theme.gitalk.enable %&#125; &lt;link rel="stylesheet" href="https://unpkg.com/gitalk/dist/gitalk.css"&gt; &lt;script src="https://unpkg.com/gitalk/dist/gitalk.min.js"&gt;&lt;/script&gt; &lt;script src="https://rawgit.com/qhh0205/78e9e0b1f3114db6737f3ed8cdd51d3a/raw/3894c5be5aa2378336b1f5ee0f296fa0b22d06e9/md5.min.js"&gt;&lt;/script&gt; &lt;script type="text/javascript"&gt; var gitalk = new Gitalk(&#123; clientID: '&#123;&#123; theme.gitalk.ClientID &#125;&#125;', clientSecret: '&#123;&#123; theme.gitalk.ClientSecret &#125;&#125;', repo: '&#123;&#123; theme.gitalk.repo &#125;&#125;', owner: '&#123;&#123; theme.gitalk.githubID &#125;&#125;', admin: ['&#123;&#123; theme.gitalk.adminUser &#125;&#125;'], id: md5(location.pathname), distractionFreeMode: '&#123;&#123; theme.gitalk.distractionFreeMode &#125;&#125;' &#125;) gitalk.render('gitalk-container') &lt;/script&gt;&#123;% endif %&#125; 關閉不須要的評論D:\GitHub\Blog\source\tags\inedx.md在 type: 下加入 comments: false _config.yml在主題配置文件next/_config.yml中添加如下內容： 12345678gitalk: enable: true githubID: github帳號 # 例：ppundsh repo: 倉庫名稱 # 例：ppundsh.github.io ClientID: Client ID ClientSecret: Client Secret adminUser: github帳號 #指定可初始化評論賬戶 例：ppundsh distractionFreeMode: true 以上就是 NexT 中添加 gitalk 評論的配置，博客上傳到 GitHub 上後，打開頁面進入某一博客內容下，就可看到評論處。 Next 其它功能完善顯示閱讀全文按鈕在文章中添加 more 標籤即可，形式如下： &lt;!--more--&gt; 標籤以上的內容將以摘要的形式在首頁顯示，並出現閱讀全文的按鈕。 搜索功能作者：Alliot 推薦使用 Local Search 作為站內搜索，搜索速度快，同時比較簡潔，啟用方法如下： 1、安裝插件 安裝 hexo-generator-searchdb 插件 打開 Node.js command prompt，在站點的根目錄下執行以下命令： npm install hexo-generator-searchdb --save 2、更改配置文件更改站點配置文件，新增如下內容於任意位置： 12345search: path: search.xml field: post format: html limit: 10000 更改 NexT 主題配置文件，開啟 Local Search 作為站內搜索： 123# Local searchlocal_search: enable: true 功能表設置NexT 主題功能表設置，用於設置博客上方導航欄，在主題配置文件中修改。 1234567menu: home: / #主頁 categories: /categories #分類頁（需手動創建） #about: /about #關於頁面（需手動創建） archives: /archives #歸檔頁 tags: /tags #標籤頁（需手動創建） #commonweal: /404.html # 404 （需手動創建） 只是在 menu 選項中設置還不能讓標籤頁面、分類頁面生效，需要我們手動創建 標籤頁面運行以下命令1hexo new page "tags" 同時，在 / source 目錄下會生成一個 tags 文件夾，裡面包含一個index.md文件 修改 / source/tags 目錄下的index.md文件 1234title: tagsdate: 2015-09-29 14:37:02type: "tags"--- 修改主題配置文件 去掉 tags 的註釋 1234567menu: home: / #主頁 categories: /categories #分類頁（需手動創建） #about: /about #關於頁面（需手動創建） archives: /archives #歸檔頁 tags: /tags #標籤頁（需手動創建） #commonweal: /404.html #公益 404 （需手動創建） 分類頁面運行以下命令 1hexo new page "categories" 同時，在 / source 目錄下會生成一個 categories 文件夾，裡面包含一個index.md文件 修改 / source/categories 目錄下的index.md文件 1234title: categoriesdate: 2015-09-29 14:47:21type: "categories"--- 修改主題配置文件去掉 categories 的註釋123456menu: home: / #主頁 categories: /categories #分類頁（需手動創建） #about: /about #關於頁面（需手動創建） archives: /archives #歸檔頁 tags: /tags #標籤頁（需手動創建） 側邊欄頭像設置編輯站點配置文件，增加 avatar 欄位 頭像 avatar: /images/avatar.png頭像圖片須放置在主題的 /source/images / 目錄下 開啟“更新時間”在 D:\GitHub\Blog\themes\next_config.yml 中修改以下內容開啟功能： 1234567# Post meta display settingspost_meta: item_text: true created_at: true updated_at: true # Only show 'updated' if different from 'created'. 當更新時間和創建時間不同時才顯示 updated_diff: true 修改文章底部的 tag 為 #號的標籤作者：Moorez修改範本/themes/next/layout/_macro/post.swig，搜索 rel=”tag”&gt;#，將 # 換成 文章字數統計切換到根目錄下，然後運行如下代碼 npm install hexo-symbols-count-time --save 在根目錄下的 _config.yml 加上： 12345symbols_count_time: symbols: true time: true total_symbols: true total_time: true 在 D:\GitHub\Blog\themes\next_config.yml 中修改以下內容開啟功能： 123456symbols_count_time: separated_meta: true #是否要跳行 item_text_post: true item_text_total: false awl: 1 #平均單字長度 wpm: 200 #每分鐘閱讀速度 設置網站的圖示 Favicon具體方法實現在 EasyIcon 中找一張（32*32）的ico圖示, 或者去別的網站下載或者製作，並將圖示名稱改為favicon.ico，然後把圖示放在/themes/next/source/images裡，並且修改主題配置文檔： # Put your favicon.ico into `hexo-site/source/` directory. favicon: /favicon.ico 隱藏網頁底部 powered By Hexo / 強力驅動打開themes/next/layout/_partials/footer.swig, 使用”” 隱藏之間的代碼即可，或者直接刪除。位置搜尋 “powered-by” 文章加密訪問####不用 Plug 的方式作者：Alliot原文點此 這裡搬運過來做備份 (這種方式是不安全的，詳情請點擊 hexo 文章密碼訪問的” 破解” 方法) head.swig找到 themes-&gt;next-&gt;layout-&gt;_partials-&gt;head.swig 文件。添加如下代碼 (推薦加在所有的標籤之後): 12345678910&lt;script&gt; (function()&#123; if('&#123;&#123; page.password &#125;&#125;')&#123; if (prompt('請輸入文章密碼','') !== '&#123;&#123; page.password &#125;&#125;')&#123; alert('密碼錯誤！'); history.back(); &#125; &#125; &#125;)();&lt;/script&gt; 發文發文的時候頂部的頁面變量添加”password: 密碼” 即可，如: 123456title: '2017-01-01'permalink: post/111111111.htmltags: - TESTdate: 2017-01-01 00:00:00password: 123 hexo-blog-encrypt安裝在 D:\Github\Blog 下，找到 package.json 加上 “hexo-blog-encrypt”: “2.0.”需注意此為 json 格式，除了最後一筆以外都句尾都要有 “ , ” 在此目錄下，開啟 CMD ，執行 npminstall _config.yml在 D:\Github\Blog 下，修改 _config.yml ，加入以下字句123# Secutityencrypt: enable:true 可在 D:\GitHub\Blog\scaffolds\post.md 下加入 12password: #密碼abstract: #加密時顯示在文章列表的摘要 之後只要填寫 password: 後的密碼，該文即會被加密 動態背景作者：Xujian 修改主題配置文件如果不想自定義設置下一個步驟的配置項，只需要做這一步操作文件位址：blog/theme/next/_config.yml將文件中的 canvas_nest: false 為 canvas_nest: true 即可。 修改_layout.swig 文件文件位址：blog/themes/next/layout/_layout.swig在 !function(t){function e(t,e){var n=new Image,i=t.getAttribute("data-original");n.onload=function(){t.src=i,e&&e()},n.src=i}function n(){for(var n=0;n]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018-04-08%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.Quick StartCreate a new post1$ hexo new "My New Post"More info: WritingRun server1$ hexo serverMore info: ServerGenerate static files1$ hexo generateMore info: GeneratingDeploy to remote sites1$ hexo deployMore info: DeploymentMarkdown]]></content>
  </entry>
</search>
